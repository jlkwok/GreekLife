package com.eecs341.greeklife.Chapter;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/chapter") // This means URL's start with /demo (after Application path)
public class ChapterController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private ChapterRepository chapterRepository;

	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewChapter (@RequestBody Chapter c) {
		chapterRepository.save(c);
		return "Saved";
	}

	@GetMapping(path="/governingBody/{chapterName}")
	public @ResponseBody GoverningBody getGoverningBody(@PathVariable("chapterName") String chapterName) {
		return chapterRepository.getGoverningBody(chapterName);
	}

	@GetMapping(path="/localFoundingDate/{chapterName}")
	public @ResponseBody String getLocalFoundingDate(@PathVariable("chapterName") String chapterName) {
		return chapterRepository.getLocalFoundingDate(chapterName);
	}

	@GetMapping(path="/nationalFoundingDate/{chapterName}")
	public @ResponseBody String getNationalFoundingDate(@PathVariable("chapterName") String chapterName) {
		return chapterRepository.getNationalFoundingDate(chapterName);
	}

	@GetMapping(path="/nationalDesignation/{chapterName}")
	public @ResponseBody Double getNationalDesignation(@PathVariable("chapterName") String chapterName) {
		return chapterRepository.getNationalDesignation(chapterName);
	}

	@GetMapping(path="/dues/{chapterName}")
	public @ResponseBody Double getDues(@PathVariable("chapterName") String chapterName) {
		return chapterRepository.getDues(chapterName);
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Chapter> getAll() {
		// This returns a JSON or XML with the users
		return chapterRepository.findAll();
	}
}
